{"version":3,"sources":["firebase.js","features/userSlice.js","components/Nav.js","components/QuoraBox.js","features/questionSlice.js","components/Posts.js","components/StudentService.js","components/NavBar.js","components/Login.js","components/Register.js","components/Home.js","components/MainApp.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","GoogleAuthProvider","firestore","userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","Nav","useSelector","useState","IsmodalOpen","setIsModalOpen","input","setInput","inputUrl","setInputUrl","className","src","alt","Avatar","photo","Button","onClick","signOut","isOpen","onRequestClose","shouldCloseOnOverlayClick","style","overlay","width","height","backgroundColor","zIndex","top","left","marginTop","marginLeft","email","Input","required","value","onChange","e","target","type","placeholder","Link","preventDefault","collection","add","question","imageUrl","timestamp","FieldValue","serverTimestamp","QuoraBox","questionSlice","questionId","questionName","setQuestionInfo","selectQuestionId","Posts","Id","userName","userImg","dispatch","useDispatch","answer","setAnswer","getAnswers","setGetAnswers","useEffect","doc","orderBy","onSnapshot","snapshot","docs","map","id","answers","data","Date","toDate","toLocaleDateString","toLocaleString","console","log","position","paddingBottom","color","fontSize","display","right","displayName","StudentService","posts","setPosts","newque","questions","useTimes","NavBar","to","Login","setEmail","password","setPassword","view","setView","signInWithEmailAndPassword","then","catch","alert","message","Register","username","setUsername","img","setImg","createUserWithEmailAndPassword","onAuthStateChanged","authUser","updateProfile","photoURL","Home","MainApp","path","exact","component","App","uid","store","configureStore","reducer","userReducer","questionReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.844c319a.chunk.js","sourcesContent":["import firebase from \"firebase\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB9ibHQJoJiJJ4G9Ef4dbXTw2joD34b00M\",\r\n    authDomain: \"studentservice-6371d.firebaseapp.com\",\r\n    projectId: \"studentservice-6371d\",\r\n    storageBucket: \"studentservice-6371d.appspot.com\",\r\n    messagingSenderId: \"287305846227\",\r\n    appId: \"1:287305846227:web:a24c119eb83c05b9553326\",\r\n    measurementId: \"G-8DM53G26QJ\"\r\n  };\r\n\r\n\r\n  const firebaseApp=firebase.initializeApp(firebaseConfig)\r\n  const auth=firebase.auth()\r\n  const provider=new firebase.auth.GoogleAuthProvider()\r\n  const db=firebaseApp.firestore()\r\n\r\n  export {auth,provider}\r\n  export default db","import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState : {\n    user:null,\n  },\n  \n  reducers: {\n    login: (state,action) => {\n      state.user =action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { login,logout } = userSlice.actions;\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import React,{useState} from 'react'\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { Avatar , Button , Input} from \"@material-ui/core\";\r\nimport db, {auth} from \"../firebase\"\r\nimport \"../css/Nav.css\";\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../features/userSlice';\r\nimport Modal from \"react-modal\"\r\nimport {  Link } from \"@material-ui/icons\";\r\nimport firebase from \"firebase\"\r\n\r\nfunction Nav() {\r\n  const user=useSelector(selectUser)\r\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\r\n  const [input, setInput] = useState(\"\");\r\n  const [inputUrl, setInputUrl] = useState(\"\");\r\n\r\n  const handleQuestion=(e)=>{\r\n    e.preventDefault()\r\n\r\n    setIsModalOpen(false)\r\n\r\n    db.collection('questions').add({\r\n      question:input,\r\n      imageUrl:inputUrl,\r\n      timestamp:firebase.firestore.FieldValue.serverTimestamp(),\r\n      user:user\r\n    })\r\n\r\n    setInput(\"\")\r\n    setInputUrl(\"\")\r\n\r\n  }\r\n\r\n    return (\r\n    <div className=\"qHeader\">\r\n      <div className=\"qHeader__logo\">\r\n      <div className=\"qHeader__next\">\r\n        <img\r\n          src=\"/images/logo.png\"\r\n          alt=\"logo\"\r\n        />\r\n      </div>\r\n      <div className=\"qHeader__main\">\r\n      <p>STUDENT SERVICE</p>\r\n        </div>\r\n        \r\n      </div>\r\n      <div className=\"qHeader__icons\">\r\n        <div className=\"active qHeader__icon\">\r\n          <HomeIcon />\r\n          <p>HOME</p>\r\n        </div>\r\n        </div>\r\n      <div className=\"qHeader__Rem\">\r\n        <div className=\"qHeader__avatar\">\r\n          <Avatar  src={user.photo} />\r\n        </div>\r\n        <Button onClick={()=> auth.signOut()} > LOGOUT</Button>\r\n        <Button onClick={()=>setIsModalOpen(true)}>Add Question</Button>\r\n      </div>\r\n      <Modal\r\n      isOpen={IsmodalOpen}\r\n      onRequestClose={()=>setIsModalOpen(false)}\r\n      shouldCloseOnOverlayClick={false}\r\n      style={{\r\n            overlay: {\r\n              width: 700,\r\n              height: 600,\r\n              backgroundColor: \"rgba(0,0,0,0.8)\",\r\n              zIndex: \"1000\",\r\n              top: \"50%\",\r\n              left: \"50%\",\r\n              marginTop: \"-300px\",\r\n              marginLeft: \"-350px\",\r\n            },\r\n          }}\r\n        >\r\n           <div className=\"modal__title\">\r\n            <h5>Add Question</h5>\r\n            <h5>Share Link</h5>\r\n          </div>\r\n          <div className=\"modal__info\">\r\n            <Avatar src={user.photo}/>\r\n            <p>{user.email}</p>\r\n          </div>\r\n          <div className=\"modal__Field\">\r\n            <Input \r\n             required\r\n             value={input}\r\n             onChange={(e)=>setInput(e.target.value)}\r\n             type=\"text\"\r\n             placeholder=\"Start your question with 'What', 'How', 'Why', etc. \"/>\r\n            <div className=\"modal__fieldLink\">\r\n              <Link />\r\n              <input \r\n              value={inputUrl}\r\n              onChange={(e)=>setInputUrl(e.target.value)}\r\n              type=\"text\" \r\n              placeholder=\"Optional: inclue a link that gives context\"></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal__buttons\">\r\n            <button className=\"cancle\" onClick={()=>setIsModalOpen(false)}>Cancel</button>\r\n            <button onClick={handleQuestion} className=\"add\" type=\"sumbit\" >Add Question</button>\r\n          </div>\r\n        </Modal>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\nimport \"../css/QuoraBox.css\"\r\nimport {Avatar} from \"@material-ui/core\"\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUser } from '../features/userSlice'\r\n\r\nfunction QuoraBox() {\r\n  const user=useSelector(selectUser)\r\n    return (\r\n    <div className=\"quoraBox\">\r\n      <div className=\"quoraBox__info\">\r\n        <Avatar src={user.photo}/>\r\n        <h5>{user.email}</h5>\r\n       </div>\r\n      <div className=\"quoraBox__quora\">\r\n        <p>What is your question or link?</p>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default QuoraBox\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const questionSlice = createSlice({\r\n  name: \"question\",\r\n  initialState: {\r\n    questionId: null,\r\n    questionName: null,\r\n  },\r\n  reducers: {\r\n    setQuestionInfo: (state, action) => {\r\n      state.questionId = action.payload.questionId;\r\n      state.questionName = action.payload.questionName;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setQuestionInfo } = questionSlice.actions;\r\n\r\nexport const selectQuestionId = (state) => state.question.questionId;\r\nexport const selectQuestionName = (state) => state.question.questionName;\r\n\r\nexport default questionSlice.reducer;","import React, { useEffect, useState } from 'react'\r\nimport '../css/Post.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectUser } from '../features/userSlice'\r\nimport { Avatar } from '@material-ui/core'\r\nimport Modal from 'react-modal'\r\nimport db from '../firebase'\r\nimport { selectQuestionId, setQuestionInfo } from '../features/questionSlice'\r\nimport firebase from 'firebase'\r\n\r\nfunction Posts({\r\n  Id,\r\n  question,\r\n  imageUrl,\r\n  timestamp,\r\n  email,\r\n  userName,\r\n  userImg,\r\n}) {\r\n  const user = useSelector(selectUser)\r\n  const dispatch = useDispatch()\r\n\r\n  const [IsmodalOpen, setIsModalOpen] = useState(false)\r\n  const questionId = useSelector(selectQuestionId)\r\n  const [answer, setAnswer] = useState('')\r\n  const [getAnswers, setGetAnswers] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (questionId) {\r\n      db.collection('questions')\r\n        .doc(questionId)\r\n        .collection('answer')\r\n        .orderBy('timestamp', 'desc')\r\n        .onSnapshot((snapshot) =>\r\n          setGetAnswers(\r\n            snapshot.docs.map((doc) => ({ id: doc.id, answers: doc.data() }))\r\n          )\r\n        )\r\n    }\r\n  }, [questionId])\r\n\r\n  const handleAnswer = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (questionId) {\r\n      db.collection('questions').doc(questionId).collection('answer').add({\r\n        user: user,\r\n        answer: answer,\r\n        questionId: questionId,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      })\r\n    }\r\n    console.log(questionId)\r\n    setAnswer('')\r\n    setIsModalOpen(false)\r\n  }\r\n  return (\r\n    <div\r\n      className='post'\r\n      onClick={() =>\r\n        dispatch(\r\n          setQuestionInfo({\r\n            questionId: Id,\r\n            questionName: question,\r\n          })\r\n        )\r\n      }\r\n    >\r\n      <div className='post__info'>\r\n        <Avatar src={userImg} />\r\n        <h4>{userName}</h4>\r\n        <small>{new Date(timestamp?.toDate()).toLocaleDateString()}</small>\r\n      </div>\r\n      <div className='post__body'>\r\n        <div className='post__question'>\r\n          <p>{question}</p>\r\n          <button\r\n            onClick={() => setIsModalOpen(true)}\r\n            className='post__btnAnswer'\r\n          >\r\n            answer\r\n          </button>\r\n          <Modal\r\n            isOpen={IsmodalOpen}\r\n            onRequestClose={() => setIsModalOpen(false)}\r\n            shouldCloseOnOverlayClick={false}\r\n            style={{\r\n              overlay: {\r\n                width: 680,\r\n                height: 550,\r\n                backgroundColor: 'rgba(0,0,0,0.8)',\r\n                zIndex: '1000',\r\n                top: '50%',\r\n                left: '50%',\r\n                marginTop: '-250px',\r\n                marginLeft: '-350px',\r\n              },\r\n            }}\r\n          >\r\n            <div className='modal__question'>\r\n              <h1>{question}</h1>\r\n              <p>\r\n                asked by <span className='name'>{userName}</span> {''}\r\n                on{' '}\r\n                <span className='name'>\r\n                  {new Date(timestamp?.toDate()).toLocaleString()}\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className='modal__answer'>\r\n              <textarea\r\n                value={answer}\r\n                onChange={(e) => setAnswer(e.target.value)}\r\n                placeholder='Enter Your Answer'\r\n                type='text'\r\n              />\r\n            </div>\r\n            <div className='modal__button'>\r\n              <button className='cancle' onClick={() => setIsModalOpen(false)}>\r\n                Cancel\r\n              </button>\r\n              <button type='sumbit' onClick={handleAnswer} className='add'>\r\n                Add Answer\r\n              </button>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n        <div className='post__answer'>\r\n          {getAnswers.map(({ id, answers }) => (\r\n            <p key={id} style={{ position: 'relative', paddingBottom: '5px' }}>\r\n              {Id === answers.questionId ? (\r\n                <span>\r\n                  {answers.answer}\r\n                  <br />\r\n                  <span\r\n                    style={{\r\n                      position: 'absolute',\r\n                      color: 'gray',\r\n                      fontSize: 'small',\r\n                      display: 'flex',\r\n                      right: '0px',\r\n                    }}\r\n                  >\r\n                    <span style={{ color: 'blue' }}>\r\n                      {answers.user.displayName\r\n                        ? answers.user.displayName\r\n                        : answers.user.email}{' '}\r\n                      on{' '}\r\n                      {new Date(answers.timestamp?.toDate()).toLocaleString()}\r\n                    </span>\r\n                  </span>\r\n                </span>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </p>\r\n          ))}\r\n        </div>\r\n        <img src={imageUrl} alt='' />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Posts\r\n","import React, { useEffect, useState } from 'react'\r\nimport Nav from './Nav'\r\nimport QuoraBox from './QuoraBox'\r\nimport \"../css/StudentService.css\"\r\nimport Posts from './Posts'\r\nimport db from '../firebase'\r\n\r\nfunction useTimes(){\r\n\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db\r\n        .collection(\"questions\")\r\n        .orderBy('timestamp',\"desc\")\r\n        .onSnapshot((snapshot)=>{\r\n            const newque=snapshot.docs.map((doc)=>({\r\n                id:doc.id,\r\n                questions:doc.data()\r\n            }))\r\n            setPosts(newque)\r\n        })\r\n      }, [])\r\n\r\n    return posts\r\n}\r\n\r\n\r\nconst StudentService =()=> {\r\n\r\n    const posts=useTimes()\r\n\r\n    return (\r\n        <div className=\"StudentService\">\r\n            <Nav/>\r\n            <div className=\"feedbox\">\r\n                <QuoraBox/>\r\n                {posts.map(({ id, questions }) => (\r\n                <Posts\r\n                key={id}\r\n                Id={id}\r\n                question={questions.question}\r\n                imageUrl={questions.imageUrl}\r\n                timestamp={questions.timestamp}\r\n                email={questions.user.email}\r\n                userName={questions.user.displayName}\r\n                userImg={questions.user.photo}\r\n                   />\r\n                 ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentService\r\n","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport \"../css/MainApp.css\"\r\n\r\nfunction NavBar()\r\n{\r\n\r\n    return(\r\n      <nav>\r\n        <div className=\"name\">\r\n        <p> CBIT STUDENT SERVICE</p>\r\n        </div>\r\n        <ul className=\"nav-links\">\r\n        <Link to=\"/\" >\r\n        <li >HOME</li>\r\n        </Link>  \r\n        <Link to=\"/Login\" >\r\n        <li >LOGIN</li>\r\n        </Link>     \r\n        <Link to=\"/Register\" >\r\n        <li >REGISTER</li>\r\n        </Link>        \r\n        </ul>\r\n      </nav>\r\n    )\r\n}\r\nexport default NavBar","import React, { useState } from 'react'\r\nimport '../css/login.css'\r\nimport { auth } from '../firebase'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility'\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff'\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [view, setView] = useState(true)\r\n\r\n  const handleSignIn = (e) => {\r\n    e.preventDefault()\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((auth) => {\r\n        console.log(auth)\r\n      })\r\n      .catch((e) => alert(e.message))\r\n    setEmail('')\r\n    setPassword('')\r\n  }\r\n  return (\r\n    <div className='loginbox'>\r\n      <div className='login'>\r\n        <div className='logo'>\r\n          <img\r\n            src='https://www.cbit.ac.in/wp-content/themes/CBIT/images/logo.png'\r\n            alt='cbitlogo'\r\n          ></img>\r\n        </div>\r\n        <div className='credentials'>\r\n          <h1>login</h1>\r\n          <input\r\n            required\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            type='text'\r\n            placeholder='EMAIL'\r\n          ></input>\r\n          <input\r\n            required\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type={view ? 'type' : 'password'}\r\n            placeholder='PASSWORD'\r\n          ></input>\r\n          <div className='eyeicon'>\r\n            {view ? (\r\n              <VisibilityOffIcon onClick={() => setView(!view)} />\r\n            ) : (\r\n              <VisibilityIcon onClick={() => setView(!view)} />\r\n            )}\r\n          </div>\r\n          <button onClick={handleSignIn} type='submit'>\r\n            login\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from 'react'\r\nimport '../css/login.css'\r\nimport { auth } from '../firebase'\r\n\r\nfunction Register() {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [img, setImg] = useState('')\r\n  const registerSignIn = (e) => {\r\n    e.preventDefault()\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((auth) => {\r\n        if (auth) {\r\n          console.log(auth)\r\n        }\r\n      })\r\n      .catch((e) => alert(e.message))\r\n\r\n    auth.onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        authUser.updateProfile({\r\n          displayName: username,\r\n          photoURL: img,\r\n        })\r\n        console.log(authUser)\r\n      }\r\n    })\r\n    setUsername('')\r\n    setEmail('')\r\n    setPassword('')\r\n    setImg('')\r\n  }\r\n\r\n  return (\r\n    <div className='loginbox'>\r\n      <div className='login'>\r\n        <div className='logo'>\r\n          <img src='../images/logo.png' alt='cbitlogo'></img>\r\n        </div>\r\n        <div className='credentials'>\r\n          <h1>SIGNUP</h1>\r\n          <input\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            type='text'\r\n            placeholder='USERNAME'\r\n          ></input>\r\n          <input\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            type='text'\r\n            placeholder='EMAIL'\r\n          ></input>\r\n          <input\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type='passwoed'\r\n            placeholder='PASSWORD'\r\n          ></input>\r\n          <input\r\n            value={img}\r\n            onChange={(e) => setImg(e.target.value)}\r\n            type='text'\r\n            placeholder='AVATAR'\r\n          ></input>\r\n          <button onClick={registerSignIn} type='submit'>\r\n            SIGNUP\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\r\nimport '../css/Home.css'\r\nimport Carousel from 'react-elastic-carousel'\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className='homeimages'>\r\n      <Carousel>\r\n        <img src='/images/CBIT MAIN BLOCK.jpg' alt='one'></img>\r\n        <img src='/images/studentservice3.jpg' alt='two'></img>\r\n        <img src='/images/student.jpg' alt='three'></img>\r\n        <img src='/images/studentservice.jpg' alt='four'></img>\r\n      </Carousel>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from \"react\"\r\nimport NavBar from \"./NavBar\"\r\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\"\r\nimport Login from \"./Login\"\r\nimport Register from \"./Register\"\r\nimport Home from \"./Home\"\r\nimport \"../css/MainApp.css\"\r\n\r\nfunction MainApp()\r\n{\r\n    return (\r\n        <Router>\r\n        <div className=\"MainApp\">\r\n        < NavBar />\r\n            <Switch>\r\n            <Route path=\"/\" exact component={Home}/>\r\n            <Route path=\"/Login\" component={Login}/>\r\n            <Route path=\"/Register\" component={Register}/>\r\n            </Switch>\r\n        </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default MainApp","import React,{useEffect} from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport StudentService from './components/StudentService';\nimport { login, logout,selectUser } from './features/userSlice';\nimport { auth } from \"./firebase\";\nimport MainApp from './components/MainApp';\n\n\nfunction App() {\n  const user = useSelector(selectUser)\n  const dispatch=useDispatch()\n\n  useEffect(() => {\n    auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        dispatch(\n          login({\n            uid: authUser.uid,\n            email: authUser.email,\n            displayName: authUser.displayName,\n            photo: authUser.photoURL,\n          })\n        );\n      } else {\n        dispatch(logout());\n      }\n    });\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      {\n        user ? (<StudentService/>) : (<MainApp/>)\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\nimport questionReducer from \"../features/questionSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n    question: questionReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}